class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();
        vector <vector<int>> res;
        
        sort(nums.begin(), nums.end());
        
        for(int i = 0; i < n - 3; ++i){
            for(int j = i + 1; j < n - 2; ++j){
                long long tgt = (long long)(target) - (long long)(nums[i] + nums[j]);
                int lo = j + 1, hi = n - 1, a = nums[i], b = nums[j];
                while(lo < hi){
                    if((long long)(nums[lo] + nums[hi]) == tgt){
                        vector<int> temp(4);
                        temp[0] = a;
                        temp[1] = b;
                        temp[2] = nums[lo];
                        temp[3] = nums[hi];
                        res.push_back(temp);
                        
                        while(lo < hi && nums[lo] == nums[lo + 1])
                        ++lo;
                        while(lo < hi && nums[hi] == nums[hi - 1])
                        --hi;
                        
                        ++lo, --hi;
                    }
                    else if((long long)(nums[lo] + nums[hi]) < tgt){
                        ++lo;
                    }    
                    else
                        --hi;
                    
                }
                while(j < n - 2 && nums[j] == nums[j+1])
                    ++j;
            }
            while(i < n-3 && nums[i] == nums[i+1])
                ++i;
        }
        return res;
    }
};
