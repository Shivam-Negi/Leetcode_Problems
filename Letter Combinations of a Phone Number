class Solution {
    void solve(string digits, int index, string subset, string map[], vector <string> &res){
        
        if(index >= digits.length()){
            res.push_back(subset);
            return;
        }
        
        int number = digits[index] - '0';
        string val = map[number];
        for(int i = 0; i<val.length(); ++i){
            subset.push_back(val[i]);
            solve(digits, index + 1, subset, map, res);
            subset.pop_back();
        }
    }
public:
    vector<string> letterCombinations(string digits) {
        
        string subset;
        vector <string> res;
        
        if(digits.length() == 0)
            return res;
        
        string map[10] = {"", "", "abc", "def", "ghi", "jkl",
                          "mno", "pqrs", "tuv", "wxyz"};
        int index = 0;
        solve(digits, index, subset, map, res);
        return res;
    }
};
