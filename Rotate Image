class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        // clockwise rotate
        // reverse up to down first, then using upper triangular matrix, swap.
        
        reverse(matrix.begin(), matrix.end());
        
        for(int i = 0; i < matrix.size(); ++i){
            for(int j = i + 1; j < matrix[0].size(); ++j){
                swap(matrix[i][j], matrix[j][i]);
            }
        }
    }
};


2nd way...


class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        // using transpose method
        
        int n = matrix.size();
        
        // transpose step
        
        for(int i = 0; i < n; ++i){
            for(int j = 0; j < i; ++j){
                swap(matrix[i][j], matrix[j][i]);
            }
        }
        
        // reversing every row 1 by 1
        
        for(int i = 0; i < n; ++i){
            reverse(matrix[i].begin(), matrix[i].end());
        }
    }
};
